---
- name: remove test config if any
  ignore_errors: true
  cisco.asa.asa_config:
    lines:
      - no object-group network ansible_test_0
      - no object-group network ansible_test_1
      - no object-group network ansible_test_2
      - no object-group service ansible_test_3 tcp-udp
      - no object-group service ansible_test_4
      - no object-group service ansible_test_5

- block:

    - set_fact:
        name: ansible_test_0
        host_ip:
          - 8.8.8.8
          - 8.8.4.4
        address:
          - 10.0.0.0 255.0.0.0
          - 192.168.0.0 255.255.0.0
          - 172.16.0.0 255.255.0.0
        description: th1s_IS-a_D3scrIPt10n_3xaMple-

    - name: STAGE 0
      register: result
      cisco.asa.asa_og: &id001
        name: '{{ name }}'
        group_type: network-object
        state: present
        host_ip: '{{ host_ip }}'
        ip_mask: '{{ address }}'
        description: '{{ description }}'

    - assert: &id002
        that:
          - result.changed == true

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id001

    - assert: &id004
        that:
          - result.changed == false

    - set_fact:
        name: ansible_test_0
        host_ip:
          - 8.8.9.9
        address:
          - 8.8.8.0 255.255.255.0

    - name: STAGE 1
      register: result
      cisco.asa.asa_og: &id003
        name: '{{ name }}'
        group_type: network-object
        state: present
        host_ip: '{{ host_ip }}'
        ip_mask: '{{ address }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id003

    - assert: *id004

    - name: STAGE 1/B
      register: result
      cisco.asa.asa_og:
        name: '{{ name }}'
        group_type: network-object
        state: present

    - assert: *id004

    - set_fact:
        name: ansible_test_1
        host_ip:
          - 8.8.9.9
        address:
          - 8.8.8.0 255.255.255.0

    - name: STAGE 2
      register: result
      cisco.asa.asa_og: &id005
        name: '{{ name }}'
        group_type: network-object
        state: present

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id005

    - assert: *id004

    - name: STAGE 2b
      register: result
      cisco.asa.asa_og: &id006
        name: '{{ name }}'
        group_type: network-object
        state: present
        host_ip: '{{ host_ip }}'
        ip_mask: '{{ address }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id006

    - assert: *id004

    - set_fact:
        name: ansible_test_0
        host_ip:
          - 8.8.8.8
          - 8.8.4.4
        address:
          - 10.0.0.0 255.0.0.0
          - 192.168.0.0 255.255.0.0
          - 172.16.0.0 255.255.0.0
        description: th1s_IS-a_D3scrIPt10n_3xaMple-

    - name: STAGE 3
      register: result
      cisco.asa.asa_og: &id007
        name: '{{ name }}'
        group_type: network-object
        state: absent
        host_ip: '{{ host_ip }}'
        ip_mask: '{{ address }}'
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id007

    - assert: *id004

    - set_fact:
        name: ansible_test_2
        host_ip:
          - 8.8.8.8
          - 8.8.4.4
        address:
          - 10.0.0.0 255.0.0.0
          - 192.168.0.0 255.255.0.0
          - 172.16.0.0 255.255.0.0
        description: th1s_IS-a_D3scrIPt10n_3xaMple-

    - name: STAGE 4
      register: result
      cisco.asa.asa_og: &id008
        name: '{{ name }}'
        group_type: network-object
        state: replace
        host_ip: '{{ host_ip }}'
        ip_mask: '{{ address }}'
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id008

    - assert: *id004

    - set_fact:
        name: ansible_test_2
        host_ip:
          - 8.8.8.8
        address:
          - 10.0.0.0 255.0.0.0
          - 1.0.0.0 255.255.0.0
        description: th1s_IS-a_D3scrIPt10n_3xaMple-

    - name: STAGE 5
      register: result
      cisco.asa.asa_og: &id009
        name: '{{ name }}'
        group_type: network-object
        state: replace
        host_ip: '{{ host_ip }}'
        ip_mask: '{{ address }}'
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id009

    - assert: *id004

    - set_fact:
        name: ansible_test_2
        host_ip:
          - 9.9.9.9
          - 8.8.8.8
        description: th1s_IS-a_D3scrIPt10n_3xaMple-

    - name: STAGE 6
      register: result
      cisco.asa.asa_og: &id010
        name: '{{ name }}'
        group_type: network-object
        state: replace
        host_ip: '{{ host_ip }}'
        ip_mask: '{{ address }}'
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id010

    - assert: *id004

    - set_fact:
        name: ansible_test_3
        port_eq:
          - www
          - '1024'
        description: th1s_IS-a_D3scrIPt10n_3xaMple-
        port_range:
          - 1024 10024

    - name: STAGE 7
      register: result
      cisco.asa.asa_og: &id011
        name: '{{ name }}'
        protocol: tcp-udp
        port_eq: '{{ port_eq }}'
        port_range: '{{ port_range }}'
        group_type: port-object
        state: present
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id011

    - assert: *id004

    - set_fact:
        name: ansible_test_3
        port_eq:
          - talk
          - '65535'
        description: th1s_IS-a_D3scrIPt10n_3xaMple-
        port_range:
          - 1 100

    - name: STAGE 8
      register: result
      cisco.asa.asa_og: &id012
        name: '{{ name }}'
        protocol: tcp-udp
        port_eq: '{{ port_eq }}'
        port_range: '{{ port_range }}'
        group_type: port-object
        state: present
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id012

    - assert: *id004

    - name: STAGE 9
      register: result
      cisco.asa.asa_og: &id013
        name: '{{ name }}'
        protocol: tcp-udp
        port_eq: '{{ port_eq }}'
        port_range: '{{ port_range }}'
        group_type: port-object
        state: absent
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id013

    - assert: *id004

    - set_fact:
        name: ansible_test_3
        port_eq:
          - talk
          - '65535'
        description: th1s_IS-a_D3scrIPt10n_3xaMple-
        port_range:
          - 1 100

    - name: STAGE 10
      register: result
      cisco.asa.asa_og: &id014
        name: '{{ name }}'
        protocol: tcp-udp
        port_eq: '{{ port_eq }}'
        port_range: '{{ port_range }}'
        group_type: port-object
        state: replace
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id014

    - assert: *id004

    - set_fact:
        name: ansible_test_3
        port_eq:
          - talk
          - www
          - kerberos
        description: th1s_ISWhatitIS
        port_range:
          - 1024 1234

    - name: STAGE 11
      register: result
      cisco.asa.asa_og: &id015
        name: '{{ name }}'
        protocol: tcp-udp
        port_eq: '{{ port_eq }}'
        port_range: '{{ port_range }}'
        group_type: port-object
        state: replace
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id015

    - assert: *id004

    - set_fact:
        name: ansible_test_4
        service_cfg:
          - tcp destination eq 8080
          - tcp destination eq www
        description: th1s_ISWhatitIS

    - name: STAGE 12
      register: result
      cisco.asa.asa_og: &id016
        name: '{{ name }}'
        service_cfg: '{{ service_cfg }}'
        group_type: service-object
        state: present
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id016

    - assert: *id004

    - set_fact:
        name: ansible_test_4
        service_cfg:
          - tcp destination range 1234 5678
          - tcp destination range 5678 6789
        description: th1s_ISWhatitIS

    - name: STAGE 13
      register: result
      cisco.asa.asa_og: &id017
        name: '{{ name }}'
        service_cfg: '{{ service_cfg }}'
        group_type: service-object
        state: present
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id017

    - assert: *id004

    - set_fact:
        name: ansible_test_4
        service_cfg:
          - tcp destination range 1234 5678
          - tcp destination range 5678 6789
        description: th1s_ISWhatitIS

    - name: STAGE 14
      register: result
      cisco.asa.asa_og: &id018
        name: '{{ name }}'
        service_cfg: '{{ service_cfg }}'
        group_type: service-object
        state: absent
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id018

    - assert: *id004

    - set_fact:
        name: ansible_test_5
        service_cfg:
          - tcp destination range 1234 5678
          - tcp destination range 5678 6789
        description: th1s_ISWhatitIS

    - name: STAGE 15
      register: result
      cisco.asa.asa_og: &id019
        name: '{{ name }}'
        service_cfg: '{{ service_cfg }}'
        group_type: service-object
        state: replace
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id019

    - assert: *id004

    - set_fact:
        name: ansible_test_5
        service_cfg:
          - tcp destination range 1234 5678
          - tcp destination range 5678 6789
          - tcp destination eq www
        description: th1s_ISWhatitIS

    - name: STAGE 16
      register: result
      cisco.asa.asa_og: &id020
        name: '{{ name }}'
        service_cfg: '{{ service_cfg }}'
        group_type: service-object
        state: replace
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id020

    - assert: *id004

    - set_fact:
        name: ansible_test_5
        service_cfg:
          - tcp destination eq 8080
        description: th1s_ISWhatitIS

    - name: STAGE 17
      register: result
      cisco.asa.asa_og: &id021
        name: '{{ name }}'
        service_cfg: '{{ service_cfg }}'
        group_type: service-object
        state: replace
        description: '{{ description }}'

    - assert: *id002

    - name: idempotence check
      register: result
      cisco.asa.asa_og: *id021

    - assert: *id004

  always:
    - name: remove test config if any
      ignore_errors: true
      cisco.asa.asa_config:
        lines:
          - no object-group network ansible_test_0
          - no object-group network ansible_test_1
          - no object-group network ansible_test_2
          - no object-group service ansible_test_3 tcp-udp
          - no object-group service ansible_test_4
          - no object-group service ansible_test_5
